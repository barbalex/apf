/* eslint-disable camelcase, no-unused-vars */
import { observable, map } from 'mobx'
import localforage from 'localforage'

import tableNames from '../modules/tableStoreNames'

const initiateObservables = (tableClass) => {
  tableNames.forEach((tableName) => {
    tableClass[tableName] = observable.map()
  })
}

const Table = {
  adb_eigenschaften: observable.map(),
  adb_eigenschaftenLoading: observable(false),
  adb_lr: observable.map(),
  adb_lrLoading: observable(false),
  adresse: observable.map(),
  adresseLoading: observable(false),
  ap: observable.map(),
  apLoading: observable(false),
  ap_bearbstand_werte: observable.map(),
  ap_bearbstand_werteLoading: observable(false),
  ap_erfbeurtkrit_werte: observable.map(),
  ap_erfbeurtkrit_werteLoading: observable(false),
  ap_erfkrit_werte: observable.map(),
  ap_erfkrit_werteLoading: observable(false),
  ap_umsetzung_werte: observable.map(),
  ap_umsetzung_werteLoading: observable(false),
  apber: observable.map(),
  apberLoading: observable(false),
  apberuebersicht: observable.map(),
  apberuebersichtLoading: observable(false),
  assozart: observable.map(),
  assozartLoading: observable(false),
  beob_bereitgestellt: observable.map(),
  beob_bereitgestelltLoading: observable(false),
  beob_evab: observable.map(),
  beob_evabLoading: observable(false),
  beob_infospezies: observable.map(),
  beob_infospeziesLoading: observable(false),
  beob_projekt: observable.map(),
  beob_projektLoading: observable(false),
  beob_quelle: observable.map(),
  beob_quelleLoading: observable(false),
  beobzuordnung: observable.map(),
  beobzuordnungLoading: observable(false),
  ber: observable.map(),
  berLoading: observable(false),
  erfkrit: observable.map(),
  erfkritLoading: observable(false),
  evab_tbl_personen: observable.map(),
  evab_tbl_personenLoading: observable(false),
  flora_status_werte: observable.map(),
  flora_status_werteLoading: observable(false),
  gemeinde: observable.map(),
  gemeindeLoading: observable(false),
  idealbiotop: observable.map(),
  idealbiotopLoading: observable(false),
  pop: observable.map(),
  popLoading: observable(false),
  pop_entwicklung_werte: observable.map(),
  pop_entwicklung_werteLoading: observable(false),
  pop_status_werte: observable.map(),
  pop_status_werteLoading: observable(false),
  popber: observable.map(),
  popberLoading: observable(false),
  popmassnber: observable.map(),
  popmassnberLoading: observable(false),
  projekt: observable.map(),
  projektLoading: observable(true),
  tpop: observable.map(),
  tpopLoading: observable(false),
  tpop_apberrelevant_werte: observable.map(),
  tpop_apberrelevant_werteLoading: observable(false),
  tpop_entwicklung_werte: observable.map(),
  tpop_entwicklung_werteLoading: observable(false),
  tpopber: observable.map(),
  tpopberLoading: observable(false),
  tpopkontr: observable.map(),
  tpopkontrLoading: observable(false),
  tpopkontr_idbiotuebereinst_werte: observable.map(),
  tpopkontr_idbiotuebereinst_werteLoading: observable(false),
  tpopkontr_typ_werte: observable.map(),
  tpopkontr_typ_werteLoading: observable(false),
  tpopkontrzaehl: observable.map(),
  tpopkontrzaehlLoading: observable(false),
  tpopkontrzaehl_einheit_werte: observable.map(),
  tpopkontrzaehl_einheit_werteLoading: observable(false),
  tpopkontrzaehl_methode_werte: observable.map(),
  tpopkontrzaehl_methode_werteLoading: observable(false),
  tpopmassn: observable.map(),
  tpopmassnLoading: observable(false),
  tpopmassn_erfbeurt_werte: observable.map(),
  tpopmassn_erfbeurt_werteLoading: observable(false),
  tpopmassn_typ_werte: observable.map(),
  tpopmassn_typ_werteLoading: observable(false),
  tpopmassnber: observable.map(),
  tpopmassnberLoading: observable(false),
  user: observable.map(),
  userLoading: observable(false),
  userprojekt: observable.map(),
  userprojektLoading: observable(false),
  ziel: observable.map(),
  zielLoading: observable(false),
  ziel_typ_werte: observable.map(),
  ziel_typ_werteLoading: observable(false),
  zielber: observable.map(),
  zielberLoading: observable(false),
}

export default Table
